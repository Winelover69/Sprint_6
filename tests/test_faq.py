import pytest
import allure
from pages.main_page import MainPage

@allure.suite("Тесты раздела 'Вопросы о важном'")
class TestFAQAccordion:
    # Список вопросов и ожидаемых ответов.
    # Индекс соответствует порядку в HTML (0 - первый вопрос, 1 - второй и т.д.)
    FAQ_DATA = [
        ("Сколько это стоит? И можно ли оплатить онлайн?",
         "Сутки — 400 рублей. Оплата курьеру — наличными или картой."),
        ("Хочу сразу несколько самокатов! Так можно?",
         "Пока что у нас так: один заказ — один самокат. Если хотите два и больше — можете оформить несколько заказов."),
        ("Как рассчитывается время аренды?",
         "Допустим, вы оформляете заказ на 8 мая. Мы привозим самокат 8 мая в течение дня. Отсчёт времени аренды начинается с момента, когда вы оплатите заказ курьеру. Если мы привезли самокат 8 мая в 20:30, суточная аренда закончится 9 мая в 20:30."),
        ("Можно ли заказать самокат без предоплаты?",
         "Да, конечно! Но если по вашей вине самокат поломается, придётся его заменить или починить за свой счёт."),
        ("Могу ли я продлить заказ или вернуть самокат раньше?",
         "Да, вы можете продлить срок аренды, если есть свободные самокаты, или вернуть самокат раньше. Для этого позвоните нам на горячую линию. Назовите номер заказа и мы пересчитаем стоимость."),
        ("Вы привозите зарядку вместе с самокатом?",
         "Пока нет. Мы работаем над этим. Но если вы планируете долго пользоваться самокатом, можете арендовать дополнительную батарею по небольшой цене."),
        ("Можно ли отменить заказ?",
         "Да, отменить заказ можно в любое время до приезда курьера, позвонив по телефону."),
        ("Я живу за МКАДом, привезёте?",
         "Да, мы привозим даже за МКАД. Но если вы не хотите ждать, можете приехать к нам в офис и забрать самокат самостоятельно.")
    ]

    @allure.title("Проверка текста ответа на вопрос о важном")
    @pytest.mark.parametrize("question_index, expected_answer_text", enumerate(FAQ_DATA))
    def test_faq_accordion(self, driver, question_index, expected_answer_text):
        allure.attach(f"Проверяем вопрос №{question_index + 1}: '{expected_answer_text[0]}'", name="Вопрос", attachment_type=allure.attachment_type.TEXT)
        main_page = MainPage(driver)
        actual_answer_text = main_page.click_question_and_get_answer(question_index)
        allure.attach(f"Ожидаемый ответ: '{expected_answer_text[1]}'", name="Ожидаемый ответ", attachment_type=allure.attachment_type.TEXT)
        allure.attach(f"Фактический ответ: '{actual_answer_text}'", name="Фактический ответ", attachment_type=allure.attachment_type.TEXT)
        assert actual_answer_text == expected_answer_text[1]